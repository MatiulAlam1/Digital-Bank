apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      serviceAccountName: vault-init
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: vault-data-init
        image: busybox
        command: ["sh", "-c", 
          "echo 'Starting data directory initialization...';
          mkdir -p /vault/data && 
          echo 'Directory created successfully';
          chown 100:1000 /vault/data && 
          echo 'Permissions updated';
          chmod 770 /vault/data;
          echo 'InitContainer completed at $(date)'
        "]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: vault-data
          mountPath: /vault/data
      containers:
      - name: vault
        image: hashicorp/vault:1.13.3
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
          - "-c"
          - |
            echo "$(date) - Starting dependency installation" > /proc/1/fd/1
            apk add --no-cache curl jq >/dev/null 2>&1 && \
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" >/dev/null 2>&1 && \
            chmod +x kubectl && mv kubectl /usr/local/bin/
            echo "$(date) - Dependencies installed successfully" > /proc/1/fd/1
            
            echo "$(date) - Starting Vault server" > /proc/1/fd/1
            vault server -config=/vault/config/vault.json &
            VAULT_PID=$!
            
            echo "$(date) - Waiting for Vault status" > /proc/1/fd/1
            until vault status >/dev/null 2>&1; do
              echo "$(date) - Vault not ready yet..." > /proc/1/fd/1
              sleep 1
            done
            
            echo "$(date) - Executing init script" > /proc/1/fd/1
            chmod +x /vault/init/init.sh
            /vault/init/init.sh
            
            wait $VAULT_PID
        env:
        - name: VAULT_ADDR
          value: "http://127.0.0.1:8200"
        securityContext:
          runAsUser: 100
          runAsGroup: 1000
          capabilities:
            add: ["IPC_LOCK"]
        ports:
        - containerPort: 8200
          name: http
        volumeMounts:
        - name: vault-data
          mountPath: /vault/data
        - name: vault-config
          mountPath: /vault/config
        - name: vault-init-script
          mountPath: /vault/init
      volumes:
      - name: vault-data
        persistentVolumeClaim:
          claimName: vault-pvc
      - name: vault-config
        configMap:
          name: vault-config
      - name: vault-init-script
        configMap:
          name: vault-init-script
          defaultMode: 0755