application-title=User Service
spring.application.name=${SPRING_APPLICATION_NAME:user-service}
server.port=${SERVER_PORT:9491}
#spring.config.import=configserver:http://localhost:8888

spring.cloud.config.enabled=${SPRING_CLOUD_CONFIG_ENABLED:false}
# Database connection properties
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/user-service-db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:root}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
# JPA properties
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:create-drop}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}

# Kafka Configuration
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.producer.bootstrap-servers=${SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.bootstrap-servers=${SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.auto-offset-reset=${SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET:earliest}

# Producer Configuration
spring.kafka.producer.key-serializer=${SPRING_KAFKA_PRODUCER_KEY_SERIALIZER:org.apache.kafka.common.serialization.StringSerializer}
spring.kafka.producer.value-serializer=${SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER:org.apache.kafka.common.serialization.StringSerializer}

management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Configuration for Hashicorp vault
spring.cloud.vault.host=127.0.0.1
spring.cloud.vault.port=8200
spring.cloud.vault.kv.enabled=true
spring.config.import=vault://
spring.cloud.vault.uri=http://127.0.0.1:8200
spring.cloud.vault.authentication=approle
spring.cloud.vault.app-role.role-id=2fde18e5-85f5-183c-bfa7-7579f189fe7f
spring.cloud.vault.app-role.secret-id=39308d0a-647f-2824-4c66-055d49747d73
spring.cloud.vault.kv.backend=secret
spring.cloud.vault.kv.application-name=rsa-key-password-test